plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group 'com.xbaimiao.test'
version '1.0.0'

repositories {
    mavenLocal()
    maven {
        url "https://repo.xbaimiao.com/nexus/content/repositories/releases/"
    }
    maven {
        url "https://repo.aikar.co/content/groups/aikar/"
    }
    maven {
        url "https://repo.codemc.org/repository/maven-public/"
    }
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.setEncoding("UTF-8")
}

dependencies {
    implementation "top.mcplugin.lib:module-main:1.0.4-beta29"
//    implementation "top.mcplugin.lib:module-lang:1.0.4-beta29"
//    implementation "top.mcplugin.lib:module-nacos:1.0.4-beta29"
//    implementation "top.mcplugin.lib:module-command:1.0.4-beta29"
    implementation "com.github.cryptomorin:XSeries:9.1.0"
    // item-nbt
//    implementation "de.tr7zw:item-nbt-api:2.10.0"
    // ormlite
//    implementation 'com.j256.ormlite:ormlite-core:6.1'
//    implementation 'com.j256.ormlite:ormlite-jdbc:6.1'
//    implementation 'com.zaxxer:HikariCP:4.0.3'
//    implementation "top.mcplugin.lib:module-ormlite:1.0.4-beta29"
    compileOnly 'public:paper:1.16.5'
    compileOnly fileTree('libs')
}

shadowJar {
    def file = file('src\\main\\resources\\plugin.yml')
    def text = file.text
    text = text.replace('{ group }', '' + project.group + '.' + project.name)
    text = text.replace('{ name }', '' + project.name)
    file.write text
    relocate('top.mcplugin.lib', project.group + ".mcplugin.lib")
    relocate('com.cryptomorin.xseries', project.group + ".shadow.xseries")
    relocate('com.zaxxer.hikari', project.group + ".shadow.hikari")
    relocate('com.j256.ormlite', project.group + ".shadow.ormlite")
    relocate('org.slf4j', project.group + ".shadow.slf4j")
    exclude("LICENSE")
    exclude("META-INF/**")
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

test {
    useJUnitPlatform()
}